/**
 * Slack Web API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIApiChatPostMessagePost200Response.h"

#include "SlackOpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace SlackAPI
{

void OpenAPIApiChatPostMessagePost200Response::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Ok.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ok")); WriteJsonValue(Writer, Ok.GetValue());
	}
	if (Channel.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("channel")); WriteJsonValue(Writer, Channel.GetValue());
	}
	if (Ts.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("ts")); WriteJsonValue(Writer, Ts.GetValue());
	}
	if (Message.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("message")); WriteJsonValue(Writer, Message.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIApiChatPostMessagePost200Response::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ok"), Ok);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("channel"), Channel);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("ts"), Ts);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("message"), Message);

	return ParseSuccess;
}

}
